# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.define "flare" do |flare|
    flare.vm.box_version = "1.0"
    flare.vm.box = "kganguly/MSEdge-Win10"
    flare.vm.guest = :windows
    flare.vm.define "flarevm"
    flare.disksize.size = '64GB'
    flare.vm.communicator = ENV['communicator'] || "winrm"
    flare.winrm.username = "IEUser"
    flare.winrm.password = "Passw0rd!"
    flare.vm.boot_timeout = 600
    flare.vm.graceful_halt_timeout = 600
    flare.ssh.username="IEUser"
    flare.ssh.password="Passw0rd!"
    flare.ssh.insert_key = false
    flare.ssh.sudo_command = ''
    flare.ssh.shell = 'sh -l'
    flare.vm.provider "virtualbox" do |v|
      v.linked_clone = false
      v.name = "FlareVM"
      v.memory = 4096
      v.cpus = 2
      v.customize ["modifyvm", :FlareVM, "--nested-hw-virt", "on"]
      v.customize ["modifyvm", :FlareVM, "--accelerate2dvideo", "on"]
      v.customize ["modifyvm", :FlareVM, "--graphicscontroller", "vboxsvga"]
      v.customize ["modifyvm", :FlareVM, "--vram", "28"]
      v.customize ["modifyvm", :FlareVM, "--vrde", "on"]
      v.customize ["modifyvm", :FlareVM, "--vrdemulticon", "on"]
      v.customize ["modifyvm", :FlareVM, "--vrdereusecon", "on"]
      v.customize ["modifyvm", :FlareVM, "--vrdevideochannel", "on"]
      v.customize ["modifyvm", :FlareVM, "--vrdevideochannelquality", "75"]
      v.customize ["modifyvm", :FlareVM, "--vrdeaddress", "127.0.0.1"]
      v.customize ["modifyvm", :FlareVM, "--vrdeport", "3391"]
      v.customize ["modifyvm", :FlareVM, "--vrdeproperty", "H3DRedirect/Enabled=1"]
      v.customize ["modifyvm", :FlareVM, "--vrdeauthtype", "null"]
      v.customize ["modifyvm", :FlareVM, "--mouse", "ps2"]
    end
    flare.vm.network "private_network", ip: "192.168.57.20"
    flare.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true
  
    # Enabling RDP & WINRM:
  
    flare.vm.provision "shell",
      binary: true,
      privileged: false,
      inline: <<-SHELL
      # Enable RDP for IEUser
      reg add "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
      netsh advfirewall firewall set rule group="remote desktop" new enable=yes
      net localgroup "remote desktop users" IEUser /add
      # winrm - Switch to private network
      /cygdrive/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -InputFormat None -NoProfile -ExecutionPolicy Bypass -Command '$networkListManager = [Activator]::CreateInstance([Type]::GetTypeFromCLSID([Guid]"{DCB00C01-570F-4A9B-8D69-199FDBA5723B}")) ; $connections = $networkListManager.GetNetworkConnections() ; $connections | % {$_.GetNetwork().SetCategory(1)}'
      sc config winrm start= auto
      cmd /C "winrm quickconfig -q"
      /cygdrive/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command 'Set-ExecutionPolicy Unrestricted -Force' 
      /cygdrive/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -InputFormat None -NoProfile -ExecutionPolicy Bypass -Command 'cd $HOME/Desktop ; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 ; Invoke-WebRequest -Uri "https://raw.githubusercontent.com/fireeye/flare-vm/master/install.ps1" -OutFile install.ps1 ; ./install.ps1 -password Passw0rd!'
      exit
    SHELL
  end

  config.vm.define "remnux" do |remnux|
    # Download ova from https://app.box.com/s/am8a5gmibsw8dj6xn2x0thxes6a46bp6
    # import ova to virtualbox using gui
    # then run
    # vagrant package --base "REMnux v7" --output remnux.box
    # vagrant box add --name remnux remnux.box
    remnux.vm.box = "remnux"
    remnux.vm.hostname = "remnux"
    remnux.vm.define "remnux"
    remnux.ssh.username="remnux"
    remnux.ssh.password="malware"
    remnux.vm.provider "virtualbox" do |v|
      v.linked_clone = true
      v.name = "Remnux"
      v.memory = 1024
      v.cpus = 1
      v.customize ["modifyvm", :Remnux, "--nested-hw-virt", "on"]
      v.customize ["modifyvm", :Remnux, "--accelerate2dvideo", "on"]
      v.customize ["modifyvm", :Remnux, "--graphicscontroller", "vmsvga"]
      v.customize ["modifyvm", :Remnux, "--vram", "28"]
      v.customize ["modifyvm", :Remnux, "--vrde", "on"]
      v.customize ["modifyvm", :Remnux, "--vrdemulticon", "on"]
      v.customize ["modifyvm", :Remnux, "--vrdereusecon", "on"]
      v.customize ["modifyvm", :Remnux, "--vrdevideochannel", "on"]
      v.customize ["modifyvm", :Remnux, "--vrdevideochannelquality", "75"]
      v.customize ["modifyvm", :Remnux, "--vrdeaddress", "127.0.0.1"]
      v.customize ["modifyvm", :Remnux, "--vrdeport", "3401"]
      v.customize ["modifyvm", :Remnux, "--vrdeproperty", "H3DRedirect/Enabled=1"]
      v.customize ["modifyvm", :Remnux, "--vrdeauthtype", "null"]
      v.customize ["modifyvm", :Remnux, "--mouse", "usb"]
    end

    remnux.vm.network "private_network", ip: "192.168.57.21"
    remnux.vm.provision "shell", inline: <<-SHELL
      echo "Setting up the REMnux environment..."
      systemctl enable --now ssh

      apt-get update
      #apt-get upgrade -y
    SHELL
  end

end
